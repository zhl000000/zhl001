int Num = 100;
Fish[] fish = new Fish[Num];
Ball[] ball =new Ball[1];
boolean mouseDown = false;
float px;
float py;
float r=1;

void setup(){
  size(800,800);
  background(255);
  noStroke();
  ball[0] = new Ball(mouseX,mouseY,r);
  fish[0] = new Fish(width/2,height/2,random(0,255),random(0,255),random(0,255));
  for(int i=1;i<Num;i++){
    fish[i] = new Fish(fish[i-1].a1,fish[i-1].a2,random(0,255),random(0,255),random(0,255));
  } 
 
}


void mousePressed(){
  mouseDown = true;
}
void mouseReleased(){
  mouseDown = false;
}


void draw(){
  background(255);  
  if(mouseDown){
    ball[0].update();
  }
  fish[0].update();
  for(int i=1;i<Num;i++){
    if(fish[i-1].k>=4){
      fish[i].update();
    }
  }  
  for(int i=0;i<Num;i++){
    if(mouseDown){           
      float d2 = dist(mouseX,mouseY, fish[i].x, fish[i].y);
      if(d2<100){
        fish[i].xv -= 2*(mouseX-fish[i].x)/d2;
        fish[i].yv -= 2*(mouseY-fish[i].y)/d2;
      }       
    }
  }   
}













class Ball{
  float x,y;
  float r;

  
  Ball(float x,float y,float r){
    this.x=x;
    this.y=y;
    this.r=r;

  }   
  void update(){
      drawball(this.x,this.y,r);
      r=r+0.025;   
  }
  void drawball(float x,float y,float r){
    noFill();
    stroke(0);
    strokeWeight(1);
    ellipse(x-r,y-r,r,r);  
    drawball(x,y,r+10);
    drawball(x,y,r+20);
  }
}
















class Fish {
  boolean mouseDown = false;
 
  float x,y;
  float xv = random(-1,1), yv = random(-1,1);
  float tailStep = 0, tailSpeed = random(2,3); 
  float s = random(.05,.2);
  float sx = -90, sy = 0; 
  float ax = -40, ay = 0;
  float bx = 5, by = 40; 
  float cx = -40, cy = 0;
  float dx = 5, dy = -40; 
  float ex = 10, ey = 0; 
  float animOff = random(TWO_PI); 
  float a;
  float b;
  float c;
  float k =2;
  float a1,a2;
  
  Fish(float x, float y,float a,float b,float c){
    this.x = x;
    this.y = y;
    this.a = a;
    this.b = b;
    this.c = c;    
  }
  void update(){     
    this.tailStep += this.tailSpeed;    
    this.xv += (  noise(  this.x*.005 + PI,this.y*.005, millis()*.005  )*2-1 )*0.05+random(-0.25,0.25);
    this.yv += (  noise(  this.x*.005 - PI,this.y*.005, millis()*.005  )*2-1  )*0.05+random(-0.25,0.5);   
    this.xv = constrain(this.xv, -2,2);
    this.yv = constrain(this.yv, -2,2); 
    this.x += this.xv;
    this.y += this.yv; 
    a1 = this.x;
    a2 = this.y;
    if(k<4){
      k = k + 0.025;
      drawFish(k,a,b,c);
    }   
    else{      
      drawFish(k,a,b,c);
    }
    if(this.x<0){
      this.x = width;
    }
    else if(this.x>width){
      this.x = 0;
    } 
    if(this.y<0){
      this.y = height;
    }
    else if(this.y>height){
      this.y = 0;
    }    
  }   
 
  void drawFish(float k,float a,float b,float c){
    fill(a,b,c);
    sy = 30*sin( this.tailStep*.1 + this.animOff);
    pushMatrix();
    translate(this.x, this.y);
    scale(this.s,this.s);
    rotate( atan2(this.yv, this.xv) ); 
    bezier( this.sx*k,this.sy*k, this.ax*k,this.ay*k, this.bx*k,this.by*k, this.ex*k,this.ey*k );
    bezier( this.sx*k,this.sy*k, this.cx*k,this.cy*k, this.dx*k,this.dy*k, this.ex*k,this.ey*k );
    popMatrix(); 
  } 
}

